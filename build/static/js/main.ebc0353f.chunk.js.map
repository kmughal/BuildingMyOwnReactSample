{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Dynamo/src/utils.js","Dynamo/src/apply.js","Dynamo/src/reconciler.js","Dynamo/src/workLoop.js","Dynamo/src/render.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","Dynamo/src/createElement.js","Dynamo/src/states.js","index.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","utils","isEvent","key","String","startsWith","isNew","prev","isEventPresentInNewProps","prevProps","nextProps","isEventDifferent","isProperty","isRemoved","updateProperty","dom","props","name","split","forEach","c","classList","add","inlineStyleProps","style","keys","ref","current","createDom","fiber","type","document","createTextNode","createElement","filter","applyProperties","eventName","replace","toLowerCase","addEventListener","applyEvents","updateDom","eventType","substring","removeEventListener","removeOldEvents","removeOldProperties","applyNewEvents","applyNewProperties","deletions","reconcileChildren","wipFiber","elements","index","oldFiber","alternate","child","prevSibling","element","newFiber","sameType","parent","effectTag","sibling","resetHooks","currentHookIndex","currentMemoIndex","performUnitOfWork","isFunctionalComponent","functionalComponent","children","updateFunctionalComponent","updateHostComponent","nextFiber","commitWork","domParentFiber","domParent","appendChild","commitDeletion","removeChild","wipRoot","nextUnitOfWork","currentRoot","elementIndex","setNextUnitOfWorkAndWipRoot","workLoop","deadline","shouldYield","timeRemaining","requestIdleCallback","startWorkLoop","rootObject","selectWipByComponentName","componentName","result","e","propertyPresent","nameOfProperty","object","initialzePropertyIfNotPresent","didHookRan","hook","getHook","initialValue","hooks","newHookReturned","state","callback","action","newState","setNextUnitOfWorkFromCurrentWip","ran","createNewHook","createHookIfNotPresent","getHookForCurrentItem","Error","newHook","getMemoValue","params","component","memo","memos","previousActionResult","previousParams","getMemo","JSON","stringify","computeMemo","currentReferenceIndex","render","container","Function","_defineProperty","obj","defineProperty","enumerable","configurable","writable","_createTextElement","text","nodeValue","map","useState","intialValue","useRef","currentElement","getVirtualDomReference","Dynamo","counter","setCounter","textbox","background","border","padding","color","onClick","_","console","log","getElementById","Date","dateTimeValue","setDateTime","setInterval","square","setSquare","r","className"],"mappings":"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","file":"static/js/main.ebc0353f.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export const utils = {\n  isEvent(key) {\n    return String(key || \"\").startsWith(\"on\");\n  },\n  isNew(prev, next) {\n    return key => String(prev[key]) !== String(next[key]);\n  },\n  isEventPresentInNewProps(key, prevProps, nextProps) {\n    if (!utils.isEvent(key)) return false;\n    if (!utils.isNew(prevProps, nextProps)(key)) return false;\n    return key in nextProps;\n  },\n  isEventDifferent(prevProps, nextProps) {\n    return key =>\n      utils.isEvent(prevProps[key]) &&\n      utils.isEvent(nextProps[key]) &&\n      key in nextProps &&\n      key in prevProps &&\n      String(nextProps[key]) !== String(prevProps[key]);\n  },\n  isProperty(key) {\n    return key !== \"children\" && !utils.isEvent(key);\n  },\n  isRemoved(next) {\n    return key => !(key in next);\n  }\n};\n","import { utils } from \"./utils\";\n\nconst updateProperty = (dom, props) => {\n  return name => {\n    switch (name) {\n      case \"className\":\n        String(props[name])\n          .split(\" \")\n          .forEach(c => dom.classList.add(c));\n        break;\n      case \"style\":\n        const inlineStyleProps = props.style;\n        Object.keys(inlineStyleProps).forEach(name => {\n          dom[\"style\"][name] = inlineStyleProps[name];\n        });\n        break;\n      case \"ref\":\n        props.ref.current = dom;\n        break;\n\n      default:\n        dom[name] = props[name];\n    }\n  };\n};\n\nconst applyProperties = (fiber, dom) => {\n  const { props } = fiber;\n  if (!props) return;\n\n  Object.keys(props)\n    .filter(utils.isProperty)\n    .forEach(updateProperty(dom, props));\n};\n\nconst applyEvents = (fiber, dom) => {\n  const { props } = fiber;\n  Object.keys(props)\n    .filter(utils.isEvent)\n    .forEach(name => {\n      let eventName = name.replace(\"on\", \"\").toLowerCase();\n      dom.addEventListener(eventName, props[name]);\n    });\n};\n\nconst removeOldEvents = (dom, prevProps, nextProps) => {\n  const { isEventDifferent } = utils;\n  Object.keys(prevProps)\n    .filter(isEventDifferent(prevProps, nextProps))\n    .forEach(name => {\n      const eventType = name.toLowerCase().substring(2);\n      dom.removeEventListener(eventType, prevProps[name]);\n    });\n};\n\nconst removeOldProperties = (dom, prevProps, nextProps) => {\n  const { isProperty, isRemoved } = utils;\n  Object.keys(prevProps)\n    .filter(isProperty)\n    .filter(isRemoved(prevProps, nextProps))\n    .forEach(name => {\n      dom[name] = \"\";\n    });\n};\n\nconst applyNewProperties = (dom, prevProps, nextProps) => {\n  const { isProperty, isNew } = utils;\n  Object.keys(nextProps)\n    .filter(isProperty)\n    .filter(isNew(prevProps, nextProps))\n    .forEach(updateProperty(dom, nextProps));\n};\n\nconst applyNewEvents = (dom, prevProps, nextProps) => {\n  const { isEventPresentInNewProps } = utils;\n  Object.keys(nextProps)\n    .filter(isEventPresentInNewProps)\n    .forEach(name => {\n      const eventType = name.toLowerCase().substring(2);\n      dom.addEventListener(eventType, nextProps[name]);\n    });\n};\n\nconst createDom = fiber => {\n  const dom =\n    fiber.type === \"TEXT_ELEMENT\"\n      ? document.createTextNode(\"\")\n      : document.createElement(fiber.type);\n\n  applyProperties(fiber, dom);\n  applyEvents(fiber, dom);\n  return dom;\n};\n\nconst updateDom = (dom, prevProps, nextProps) => {\n  removeOldEvents(dom, prevProps, nextProps);\n  removeOldProperties(dom, prevProps, nextProps);\n  applyNewEvents(dom, prevProps, nextProps);\n  applyNewProperties(dom, prevProps, nextProps);\n};\n\nexport {\n  applyProperties,\n  applyEvents,\n  removeOldEvents,\n  removeOldProperties,\n  applyNewEvents,\n  applyNewProperties,\n  updateDom,\n  createDom\n};\n","import { updateDom, createDom } from \"./apply\";\n\nlet deletions = [];\nlet wipFiber = null;\nconst reconcileChildren = (wipFiber, elements) => {\n  let index = 0;\n  let oldFiber = wipFiber.alternate && wipFiber.alternate.child;\n  let prevSibling = null;\n\n  while (index < elements.length || oldFiber != null) {\n    const element = elements[index];\n    let newFiber = null;\n    const sameType = oldFiber && element && element.type == oldFiber.type;\n\n    if (sameType) {\n      newFiber = {\n        type: oldFiber.type,\n        props: element.props,\n        dom: oldFiber.dom,\n        parent: wipFiber,\n        alternate: oldFiber,\n        effectTag: \"UPDATE\"\n      };\n    }\n    if (element && !sameType) {\n      newFiber = {\n        type: element.type,\n        props: element.props,\n        dom: null,\n        parent: wipFiber,\n        alternate: null,\n        effectTag: \"PLACEMENT\"\n      };\n    }\n    if (oldFiber && !sameType) {\n      oldFiber.effectTag = \"DELETION\";\n      deletions.push(oldFiber);\n    }\n\n    if (oldFiber) {\n      oldFiber = oldFiber.sibling;\n    }\n\n    if (index === 0) {\n      wipFiber.child = newFiber;\n    } else if (element) {\n      prevSibling.sibling = newFiber;\n    }\n    prevSibling = newFiber;\n    index++;\n  }\n};\n\nconst updateHostComponent = fiber => {\n  if (!fiber.dom) {\n    fiber.dom = createDom(fiber);\n  }\n  reconcileChildren(fiber, fiber.props.children);\n};\n\nconst updateFunctionalComponent = fiber => {\n  wipFiber = fiber;\n  const functionalComponent = fiber.props.children[0]();\n  resetHooks(fiber);\n  reconcileChildren(fiber, functionalComponent.props.children);\n};\n\nconst resetHooks = fiber => {\n  fiber.currentHookIndex = -1;\n  fiber.currentMemoIndex = -1;\n};\n\nconst performUnitOfWork = fiber => {\n  if (fiber.isFunctionalComponent) {\n    updateFunctionalComponent(fiber);\n  } else {\n    updateHostComponent(fiber);\n  }\n\n  if (fiber.child) {\n    return fiber.child;\n  }\n\n  let nextFiber = fiber;\n  while (nextFiber) {\n    if (nextFiber.sibling) {\n      return nextFiber.sibling;\n    }\n    nextFiber = nextFiber.parent;\n  }\n};\n\nconst commitRoot = wipRoot => {\n  deletions.forEach(commitWork);\n  commitWork(wipRoot.child);\n  return wipRoot;\n};\n\nconst commitDeletion = (fiber, domParent) => {\n  if (fiber.dom) {\n    domParent.removeChild(fiber.dom);\n  } else {\n    commitDeletion(fiber.child, domParent);\n  }\n};\n\nconst commitWork = fiber => {\n  if (!fiber) {\n    return;\n  }\n\n  let domParentFiber = fiber.parent;\n  while (!domParentFiber.dom) {\n    domParentFiber = domParentFiber.parent;\n  }\n\n  const domParent = domParentFiber.dom;\n  if (fiber.effectTag === \"PLACEMENT\" && fiber.dom != null) {\n    domParent.appendChild(fiber.dom);\n  } else if (fiber.effectTag === \"UPDATE\" && fiber.dom != null) {\n    updateDom(fiber.dom, fiber.alternate.props, fiber.props);\n  } else if (fiber.effectTag === \"DELETION\") {\n    commitDeletion(fiber, domParent);\n  }\n  commitWork(fiber.child);\n  commitWork(fiber.sibling);\n};\n\nexport { commitRoot, performUnitOfWork };\n","import { performUnitOfWork, commitRoot } from \"./reconciler\";\n\nlet currentRoot = null;\nlet wipRoot = null;\nlet nextUnitOfWork = null;\nconst elements = [];\n\nconst addElement = wipRoot => {\n  elements.push(createElement(wipRoot));\n  return elements;\n};\n\nconst createElement = wipRoot => {\n  return {\n    alternate: wipRoot,\n    currentRoot: wipRoot,\n    wipRoot: wipRoot,\n    nextUnitOfWork: wipRoot\n  };\n};\n\nconst workIsComplete = work => {\n  currentRoot = work;\n  wipRoot = null;\n};\n\nlet elementIndex = 0;\nconst getNextUnitOfWork = () => {\n  return elementIndex < elements.length ? elements[elementIndex++] : null;\n};\n\nconst setNextUnitOfWorkAndWipRoot = () => {\n  if (wipRoot === null) {\n    let element = getNextUnitOfWork();\n\n    if (element !== null) {\n      if (element.nextUnitOfWork) nextUnitOfWork = element.nextUnitOfWork;\n      if (element.wipRoot) wipRoot = element.wipRoot;\n      if (element.currentRoot) currentRoot = element.currentRoot;\n    }\n  }\n};\n\nconst workLoop = deadline => {\n  let shouldYield = false;\n  setNextUnitOfWorkAndWipRoot();\n  while (nextUnitOfWork && !shouldYield) {\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    shouldYield = deadline.timeRemaining() < 1;\n  }\n  if (!nextUnitOfWork && wipRoot) {\n    workIsComplete(commitRoot(wipRoot));\n  }\n  requestIdleCallback(workLoop);\n};\n\nconst startWorkLoop = rootObject => {\n  wipRoot = rootObject;\n  nextUnitOfWork = wipRoot;\n  addElement(rootObject);\n  requestIdleCallback(workLoop);\n};\n\nconst selectWipByComponentName = (elements, componentName) => {\n  const filterByName = e => e.currentRoot.componentName === componentName;\n  var result = elements.filter(filterByName);\n  return result.length > 0 ? result[0] : null;\n};\n\nconst propertyPresent = (nameOfProperty, object) => {\n  return nameOfProperty in object;\n};\n\nconst initialzePropertyIfNotPresent = (nameOfProperty, object) => {\n  if (!propertyPresent(nameOfProperty, object)) object[nameOfProperty] = -1;\n};\n\nconst didHookRan = hook => {\n  return propertyPresent(\"ran\", hook);\n};\n\nconst resetHookRanFlagIfPresent = hooks => {\n  hooks.filter(didHookRan).forEach(hook => {\n    delete hook.ran;\n  });\n};\n\nconst createHookIfNotPresent = (nextUnitOfWork, initialValue) => {\n  if (nextUnitOfWork.hooks[nextUnitOfWork.currentHookIndex])\n    return nextUnitOfWork.hooks[nextUnitOfWork.currentHookIndex];\n\n  var result = createNewHook(initialValue);\n  nextUnitOfWork.hooks.push(result);\n  return result;\n\n  function createNewHook(initialValue) {\n    var newHookReturned = {};\n    newHookReturned.state = initialValue;\n\n    newHookReturned.callback = action => {\n      if (didHookRan(newHookReturned)) return;\n\n      const newState = action(newHookReturned.state);\n      if (newHookReturned.state === newState) {\n        return;\n      }\n      newHookReturned.state = newState;\n      setNextUnitOfWorkFromCurrentWip(nextUnitOfWork);\n      newHookReturned.ran = true;\n    };\n    return newHookReturned;\n  }\n};\n\nconst getHook = (nextUnitOfWork, initialValue) => {\n  nextUnitOfWork.hooks = nextUnitOfWork.hooks || [];\n\n  initialzePropertyIfNotPresent(\"currentHookIndex\", nextUnitOfWork);\n\n  nextUnitOfWork.currentHookIndex++;\n  const hook = createHookIfNotPresent(nextUnitOfWork, initialValue);\n  return hook;\n};\n\nconst getHookForCurrentItem = initialValue => {\n  const result = selectWipByComponentName(elements, wipRoot.componentName);\n  if (!result) throw new Error(\"Failed to find the component!\");\n  const newHook = getHook(result.nextUnitOfWork, initialValue);\n  resetHookRanFlagIfPresent(result.nextUnitOfWork.hooks);\n  return newHook;\n};\n\nconst getMemo = (nextUnitOfWork, action, params) => {\n  nextUnitOfWork.memos = nextUnitOfWork.memos || [];\n  initialzePropertyIfNotPresent(\"currentMemoIndex\", nextUnitOfWork);\n  nextUnitOfWork.currentMemoIndex++;\n  let memo = nextUnitOfWork.memos[nextUnitOfWork.currentMemoIndex];\n  if (!memo) {\n    memo = {\n      action,\n      params,\n      previousActionResult: null,\n      previousParams: null\n    };\n    nextUnitOfWork.memos.push(memo);\n  }\n  return memo;\n};\n\nconst computeMemo = (memo, action, params) => {\n  const previousParamsInString = JSON.stringify(memo.previousParams);\n  const newParamsInString = JSON.stringify(params);\n\n  if (previousParamsInString === newParamsInString) return;\n\n  memo.previousActionResult = action(params);\n  memo.previousParams = params;\n};\n\nconst getMemoValue = (action, params, componentName) => {\n  const component = selectWipByComponentName(elements, wipRoot.componentName);\n  if (!component) throw new Error(\"Fail to select \", componentName);\n\n  if (!params || params.length === 0) {\n    return action();\n  }\n  const memo = getMemo(component.nextUnitOfWork, action, params);\n  computeMemo(memo, action, params);\n  return memo.previousActionResult;\n};\n\nconst resetcurrentHookIndex = () => {\n  elements.forEach(element => {\n    element.nextUnitOfWork.currentHookIndex = -1;\n    element.nextUnitOfWork.currentMemoIndex = -1;\n    element.nextUnitOfWork.currentReferenceIndex = -1;\n  });\n};\n\nconst getVirtualDomReference = initialValue => {\n  const currentElement = selectWipByComponentName(\n    elements,\n    wipRoot.componentName\n  );\n  // initialzePropertyIfNotPresent(\"currentReferenceIndex\",currentElement.nextUnitOfWork);\n  // currentElement.nextUnitOfWork.currentReferenceIndex++;\n  currentElement.nextUnitOfWork.ref = {\n    current: initialValue || currentElement.ref\n  };\n\n  return currentElement.nextUnitOfWork.ref;\n};\n\nconst setNextUnitOfWorkFromCurrentWip = currentRoot => {\n  nextUnitOfWork = {\n    dom: currentRoot.dom,\n    props: currentRoot.props,\n    alternate: currentRoot,\n    isFunctionalComponent: true,\n    hook: currentRoot.hook,\n    hooks: currentRoot.hooks,\n    componentName: currentRoot.componentName\n  };\n  wipRoot = nextUnitOfWork;\n  resetcurrentHookIndex();\n};\n\nexport {\n  startWorkLoop,\n  setNextUnitOfWorkFromCurrentWip,\n  getHookForCurrentItem,\n  getMemoValue,\n  getVirtualDomReference\n};\n","import { startWorkLoop } from \"./workLoop\";\n\nconst render = (element, container) => {\n  const wipRoot = {\n    isFunctionalComponent: element instanceof Function,\n    dom: container,\n    props: {\n      children: [element]\n    },\n    alternate: null,\n    hooks: null,\n    componentName: element.name\n  };\n\n  wipRoot.alternate = wipRoot;\n  startWorkLoop(wipRoot);\n};\n\nexport default render;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const _createTextElement = text => {\n  return {\n    type: \"TEXT_ELEMENT\",\n    props: {\n      nodeValue: text,\n      children: []\n    }\n  };\n};\n\nconst createElement = (type, props, ...children) => {\n  return {\n    type,\n    props: {\n      ...props,\n      children: children.map(child =>\n        typeof child === \"object\" ? child : _createTextElement(child)\n      )\n    }\n  };\n};\n\n\nexport default createElement;","import {\n  getHookForCurrentItem,\n  getMemoValue,\n  getVirtualDomReference\n} from \"./workLoop\";\n\nconst useState = intialValue => {\n  const hook = getHookForCurrentItem(intialValue);\n  return [hook.state, hook.callback];\n};\n\nconst useMemo = (action, params) => {\n  const memoValue = getMemoValue(action, params);\n  return memoValue;\n};\n\nconst useRef = initialValue => {\n  const ref = getVirtualDomReference(initialValue);\n  return ref;\n};\n\nexport { useState, useMemo, useRef };\n","import * as Dynamo from \"./Dynamo/src\";\n\n/** @jsx Dynamo.createElement */\nconst element = () => {\n  const [counter, setCounter] = Dynamo.useState(0);\n  var style = {\n    background: \"pink\",\n    border: \"1px solid yellow\",\n    padding: \"10px 10px\"\n  };\n\n  const textBoxStyle = {\n    border: \"1px solid gray\",\n    \"border-radius\": \"5px 5px\",\n    padding: \"5px 5px\",\n    color: \"red\"\n  };\n  const textbox = Dynamo.useRef(null);\n\n  const handleClick = e => {\n    setCounter(c => c + 1);\n  };\n\n  const alertTextBoxValue = _ => {\n    console.log(textbox.current.value, \"value\");\n    return false;\n  };\n\n  return (\n    <div>\n      <h1>Application 1</h1>\n      <h1 style={style}>Simple Counter Example:</h1>\n      <p>\n        This is a simple example. Using hooks!\n        <span>This is a test</span>\n      </p>\n      <input ref={textbox} style={textBoxStyle} type=\"text\" value={counter} />\n      <button onClick={handleClick}>Counter</button>\n      <button onClick={alertTextBoxValue}>An example of useRef</button>\n    </div>\n  );\n};\nvar c = 1;\nconst timeElement = props => {\n  const [dateTimeValue, setDateTime] = Dynamo.useState(new Date().toString());\n  setInterval(() => {\n    setDateTime(() => new Date().toString());\n  }, 1000);\n\n  const [counter, setCounter] = Dynamo.useState(0);\n  const [square, setSquare] = Dynamo.useState(2);\n\n  const style = {\n    border: \"4px solid red\",\n    padding: \"10px 10px\",\n    \"margin-top\": \"10px\"\n  };\n  c++;\n  const r = Dynamo.useMemo(() => {\n    return 1 + 1;\n  }, [c % 2 == 0]);\n\n  return (\n    <div>\n      <p>Memo:{r}</p>\n      <h1 className=\"a b c\">Digital Clock {dateTimeValue}</h1>\n      <button\n        onClick={() => {\n          setCounter(c => c + 1);\n        }}\n      >\n        Click\n      </button>\n      Counter:{counter}\n      <button\n        onClick={() => {\n          setSquare(c => c * 2);\n        }}\n      >\n        Click\n      </button>\n      Square:{square}\n    </div>\n  );\n};\n\nconst container = document.getElementById(\"root\");\nDynamo.render(element, container);\n\nconst timerContainer = document.getElementById(\"timer\");\nDynamo.render(timeElement, timerContainer);\n"],"sourceRoot":""}