{"version":3,"sources":["Dynamo/src/utils.js","Dynamo/src/apply.js","Dynamo/src/reconciler.js","Dynamo/src/workLoop.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","Dynamo/src/createElement.js","Dynamo/src/states.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Dynamo/src/render.js","index.js","components/counter-example.js"],"names":["utils","isEvent","key","String","startsWith","isNew","prev","next","isEventPresentInNewProps","prevProps","nextProps","isEventDifferent","isProperty","isRemoved","updateProperty","dom","props","name","split","forEach","c","classList","add","inlineStyleProps","style","Object","keys","ref","current","createDom","fiber","type","document","createTextNode","createElement","filter","applyProperties","eventName","replace","toLowerCase","addEventListener","applyEvents","updateDom","eventType","substring","removeEventListener","removeOldEvents","removeOldProperties","applyNewEvents","applyNewProperties","deletions","reconcileChildren","wipFiber","elements","index","oldFiber","alternate","child","prevSibling","length","element","newFiber","sameType","parent","effectTag","push","sibling","resetHooks","currentHookIndex","currentMemoIndex","performUnitOfWork","isFunctionalComponent","functionalComponent","children","updateFunctionalComponent","updateHostComponent","nextFiber","commitWork","domParentFiber","domParent","appendChild","commitDeletion","removeChild","wipRoot","nextUnitOfWork","currentRoot","elementIndex","setNextUnitOfWorkAndWipRoot","workLoop","deadline","shouldYield","timeRemaining","requestIdleCallback","startWorkLoop","rootObject","selectWipByComponentName","componentName","result","e","propertyPresent","nameOfProperty","object","initialzePropertyIfNotPresent","didHookRan","hook","getHook","initialValue","hooks","newHookReturned","state","callback","action","newState","setNextUnitOfWorkFromCurrentWip","ran","createNewHook","createHookIfNotPresent","getHookForCurrentItem","Error","newHook","currentReferenceIndex","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","_createTextElement","text","nodeValue","map","useState","intialValue","useRef","currentElement","getVirtualDomReference","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","done","err","TypeError","container","Function","render","Dynamo","counter","setCounter","textbox","background","border","padding","color","onClick","_","console","log","getElementById"],"mappings":"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","file":"static/js/main.6b0d3b71.chunk.js","sourcesContent":["export const utils = {\n  isEvent(key) {\n    return String(key || \"\").startsWith(\"on\");\n  },\n  isNew(prev, next) {\n    return key => String(prev[key]) !== String(next[key]);\n  },\n  isEventPresentInNewProps(key, prevProps, nextProps) {\n    if (!utils.isEvent(key)) return false;\n    if (!utils.isNew(prevProps, nextProps)(key)) return false;\n    return key in nextProps;\n  },\n  isEventDifferent(prevProps, nextProps) {\n    return key =>\n      utils.isEvent(prevProps[key]) &&\n      utils.isEvent(nextProps[key]) &&\n      key in nextProps &&\n      key in prevProps &&\n      String(nextProps[key]) !== String(prevProps[key]);\n  },\n  isProperty(key) {\n    return key !== \"children\" && !utils.isEvent(key);\n  },\n  isRemoved(next) {\n    return key => !(key in next);\n  }\n};\n","import { utils } from \"./utils\";\n\nconst updateProperty = (dom, props) => {\n  return name => {\n    switch (name) {\n      case \"className\":\n        String(props[name])\n          .split(\" \")\n          .forEach(c => dom.classList.add(c));\n        break;\n      case \"style\":\n        const inlineStyleProps = props.style;\n        Object.keys(inlineStyleProps).forEach(name => {\n          dom[\"style\"][name] = inlineStyleProps[name];\n        });\n        break;\n      case \"ref\":\n        props.ref.current = dom;\n        break;\n\n      default:\n        dom[name] = props[name];\n    }\n  };\n};\n\nconst applyProperties = (fiber, dom) => {\n  const { props } = fiber;\n  if (!props) return;\n\n  Object.keys(props)\n    .filter(utils.isProperty)\n    .forEach(updateProperty(dom, props));\n};\n\nconst applyEvents = (fiber, dom) => {\n  const { props } = fiber;\n  Object.keys(props)\n    .filter(utils.isEvent)\n    .forEach(name => {\n      let eventName = name.replace(\"on\", \"\").toLowerCase();\n      dom.addEventListener(eventName, props[name]);\n    });\n};\n\nconst removeOldEvents = (dom, prevProps, nextProps) => {\n  const { isEventDifferent } = utils;\n  Object.keys(prevProps)\n    .filter(isEventDifferent(prevProps, nextProps))\n    .forEach(name => {\n      const eventType = name.toLowerCase().substring(2);\n      dom.removeEventListener(eventType, prevProps[name]);\n    });\n};\n\nconst removeOldProperties = (dom, prevProps, nextProps) => {\n  const { isProperty, isRemoved } = utils;\n  Object.keys(prevProps)\n    .filter(isProperty)\n    .filter(isRemoved(prevProps, nextProps))\n    .forEach(name => {\n      dom[name] = \"\";\n    });\n};\n\nconst applyNewProperties = (dom, prevProps, nextProps) => {\n  const { isProperty, isNew } = utils;\n  Object.keys(nextProps)\n    .filter(isProperty)\n    .filter(isNew(prevProps, nextProps))\n    .forEach(updateProperty(dom, nextProps));\n};\n\nconst applyNewEvents = (dom, prevProps, nextProps) => {\n  const { isEventPresentInNewProps } = utils;\n  Object.keys(nextProps)\n    .filter(isEventPresentInNewProps)\n    .forEach(name => {\n      const eventType = name.toLowerCase().substring(2);\n      dom.addEventListener(eventType, nextProps[name]);\n    });\n};\n\nconst createDom = fiber => {\n  const dom =\n    fiber.type === \"TEXT_ELEMENT\"\n      ? document.createTextNode(\"\")\n      : document.createElement(fiber.type);\n\n  applyProperties(fiber, dom);\n  applyEvents(fiber, dom);\n  return dom;\n};\n\nconst updateDom = (dom, prevProps, nextProps) => {\n  removeOldEvents(dom, prevProps, nextProps);\n  removeOldProperties(dom, prevProps, nextProps);\n  applyNewEvents(dom, prevProps, nextProps);\n  applyNewProperties(dom, prevProps, nextProps);\n};\n\nexport {\n  applyProperties,\n  applyEvents,\n  removeOldEvents,\n  removeOldProperties,\n  applyNewEvents,\n  applyNewProperties,\n  updateDom,\n  createDom\n};\n","import { updateDom, createDom } from \"./apply\";\n\nlet deletions = [];\nlet wipFiber = null;\nconst reconcileChildren = (wipFiber, elements) => {\n  let index = 0;\n  let oldFiber = wipFiber.alternate && wipFiber.alternate.child;\n  let prevSibling = null;\n\n  while (index < elements.length || oldFiber != null) {\n    const element = elements[index];\n    let newFiber = null;\n    const sameType = oldFiber && element && element.type == oldFiber.type;\n\n    if (sameType) {\n      newFiber = {\n        type: oldFiber.type,\n        props: element.props,\n        dom: oldFiber.dom,\n        parent: wipFiber,\n        alternate: oldFiber,\n        effectTag: \"UPDATE\"\n      };\n    }\n    if (element && !sameType) {\n      newFiber = {\n        type: element.type,\n        props: element.props,\n        dom: null,\n        parent: wipFiber,\n        alternate: null,\n        effectTag: \"PLACEMENT\"\n      };\n    }\n    if (oldFiber && !sameType) {\n      oldFiber.effectTag = \"DELETION\";\n      deletions.push(oldFiber);\n    }\n\n    if (oldFiber) {\n      oldFiber = oldFiber.sibling;\n    }\n\n    if (index === 0) {\n      wipFiber.child = newFiber;\n    } else if (element) {\n      prevSibling.sibling = newFiber;\n    }\n    prevSibling = newFiber;\n    index++;\n  }\n};\n\nconst updateHostComponent = fiber => {\n  if (!fiber.dom) {\n    fiber.dom = createDom(fiber);\n  }\n  reconcileChildren(fiber, fiber.props.children);\n};\n\nconst updateFunctionalComponent = fiber => {\n  wipFiber = fiber;\n  const functionalComponent = fiber.props.children[0]();\n  resetHooks(fiber);\n  reconcileChildren(fiber, functionalComponent.props.children);\n};\n\nconst resetHooks = fiber => {\n  fiber.currentHookIndex = -1;\n  fiber.currentMemoIndex = -1;\n};\n\nconst performUnitOfWork = fiber => {\n  if (fiber.isFunctionalComponent) {\n    updateFunctionalComponent(fiber);\n  } else {\n    updateHostComponent(fiber);\n  }\n\n  if (fiber.child) {\n    return fiber.child;\n  }\n\n  let nextFiber = fiber;\n  while (nextFiber) {\n    if (nextFiber.sibling) {\n      return nextFiber.sibling;\n    }\n    nextFiber = nextFiber.parent;\n  }\n};\n\nconst commitRoot = wipRoot => {\n  deletions.forEach(commitWork);\n  commitWork(wipRoot.child);\n  return wipRoot;\n};\n\nconst commitDeletion = (fiber, domParent) => {\n  if (fiber.dom) {\n    domParent.removeChild(fiber.dom);\n  } else {\n    commitDeletion(fiber.child, domParent);\n  }\n};\n\nconst commitWork = fiber => {\n  if (!fiber) {\n    return;\n  }\n\n  let domParentFiber = fiber.parent;\n  while (!domParentFiber.dom) {\n    domParentFiber = domParentFiber.parent;\n  }\n\n  const domParent = domParentFiber.dom;\n  if (fiber.effectTag === \"PLACEMENT\" && fiber.dom != null) {\n    domParent.appendChild(fiber.dom);\n  } else if (fiber.effectTag === \"UPDATE\" && fiber.dom != null) {\n    updateDom(fiber.dom, fiber.alternate.props, fiber.props);\n  } else if (fiber.effectTag === \"DELETION\") {\n    commitDeletion(fiber, domParent);\n  }\n  commitWork(fiber.child);\n  commitWork(fiber.sibling);\n};\n\nexport { commitRoot, performUnitOfWork };\n","import { performUnitOfWork, commitRoot } from \"./reconciler\";\n\nlet currentRoot = null;\nlet wipRoot = null;\nlet nextUnitOfWork = null;\nconst elements = [];\n\nconst addElement = wipRoot => {\n  elements.push(createElement(wipRoot));\n  return elements;\n};\n\nconst createElement = wipRoot => {\n  return {\n    alternate: wipRoot,\n    currentRoot: wipRoot,\n    wipRoot: wipRoot,\n    nextUnitOfWork: wipRoot\n  };\n};\n\nconst workIsComplete = work => {\n  currentRoot = work;\n  wipRoot = null;\n};\n\nlet elementIndex = 0;\nconst getNextUnitOfWork = () => {\n  return elementIndex < elements.length ? elements[elementIndex++] : null;\n};\n\nconst setNextUnitOfWorkAndWipRoot = () => {\n  if (wipRoot === null) {\n    let element = getNextUnitOfWork();\n\n    if (element !== null) {\n      if (element.nextUnitOfWork) nextUnitOfWork = element.nextUnitOfWork;\n      if (element.wipRoot) wipRoot = element.wipRoot;\n      if (element.currentRoot) currentRoot = element.currentRoot;\n    }\n  }\n};\n\nconst workLoop = deadline => {\n  let shouldYield = false;\n  setNextUnitOfWorkAndWipRoot();\n  while (nextUnitOfWork && !shouldYield) {\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    shouldYield = deadline.timeRemaining() < 1;\n  }\n  if (!nextUnitOfWork && wipRoot) {\n    workIsComplete(commitRoot(wipRoot));\n  }\n  requestIdleCallback(workLoop);\n};\n\nconst startWorkLoop = rootObject => {\n  wipRoot = rootObject;\n  nextUnitOfWork = wipRoot;\n  addElement(rootObject);\n  requestIdleCallback(workLoop);\n};\n\nconst selectWipByComponentName = (elements, componentName) => {\n  const filterByName = e => e.currentRoot.componentName === componentName;\n  var result = elements.filter(filterByName);\n  return result.length > 0 ? result[0] : null;\n};\n\nconst propertyPresent = (nameOfProperty, object) => {\n  return nameOfProperty in object;\n};\n\nconst initialzePropertyIfNotPresent = (nameOfProperty, object) => {\n  if (!propertyPresent(nameOfProperty, object)) object[nameOfProperty] = -1;\n};\n\nconst didHookRan = hook => {\n  return propertyPresent(\"ran\", hook);\n};\n\nconst resetHookRanFlagIfPresent = hooks => {\n  hooks.filter(didHookRan).forEach(hook => {\n    delete hook.ran;\n  });\n};\n\nconst createHookIfNotPresent = (nextUnitOfWork, initialValue) => {\n  if (nextUnitOfWork.hooks[nextUnitOfWork.currentHookIndex])\n    return nextUnitOfWork.hooks[nextUnitOfWork.currentHookIndex];\n\n  var result = createNewHook(initialValue);\n  nextUnitOfWork.hooks.push(result);\n  return result;\n\n  function createNewHook(initialValue) {\n    var newHookReturned = {};\n    newHookReturned.state = initialValue;\n\n    newHookReturned.callback = action => {\n      if (didHookRan(newHookReturned)) return;\n\n      const newState = action(newHookReturned.state);\n      if (newHookReturned.state === newState) {\n        return;\n      }\n      newHookReturned.state = newState;\n      setNextUnitOfWorkFromCurrentWip(nextUnitOfWork);\n      newHookReturned.ran = true;\n    };\n    return newHookReturned;\n  }\n};\n\nconst getHook = (nextUnitOfWork, initialValue) => {\n  nextUnitOfWork.hooks = nextUnitOfWork.hooks || [];\n\n  initialzePropertyIfNotPresent(\"currentHookIndex\", nextUnitOfWork);\n\n  nextUnitOfWork.currentHookIndex++;\n  const hook = createHookIfNotPresent(nextUnitOfWork, initialValue);\n  return hook;\n};\n\nconst getHookForCurrentItem = initialValue => {\n  const result = selectWipByComponentName(elements, wipRoot.componentName);\n  if (!result) throw new Error(\"Failed to find the component!\");\n  const newHook = getHook(result.nextUnitOfWork, initialValue);\n  resetHookRanFlagIfPresent(result.nextUnitOfWork.hooks);\n  return newHook;\n};\n\nconst getMemo = (nextUnitOfWork, action, params) => {\n  nextUnitOfWork.memos = nextUnitOfWork.memos || [];\n  initialzePropertyIfNotPresent(\"currentMemoIndex\", nextUnitOfWork);\n  nextUnitOfWork.currentMemoIndex++;\n  let memo = nextUnitOfWork.memos[nextUnitOfWork.currentMemoIndex];\n  if (!memo) {\n    memo = {\n      action,\n      params,\n      previousActionResult: null,\n      previousParams: null\n    };\n    nextUnitOfWork.memos.push(memo);\n  }\n  return memo;\n};\n\nconst computeMemo = (memo, action, params) => {\n  const previousParamsInString = JSON.stringify(memo.previousParams);\n  const newParamsInString = JSON.stringify(params);\n\n  if (previousParamsInString === newParamsInString) return;\n\n  memo.previousActionResult = action(params);\n  memo.previousParams = params;\n};\n\nconst getMemoValue = (action, params, componentName) => {\n  const component = selectWipByComponentName(elements, wipRoot.componentName);\n  if (!component) throw new Error(\"Fail to select \", componentName);\n\n  if (!params || params.length === 0) {\n    return action();\n  }\n  const memo = getMemo(component.nextUnitOfWork, action, params);\n  computeMemo(memo, action, params);\n  return memo.previousActionResult;\n};\n\nconst resetcurrentHookIndex = () => {\n  elements.forEach(element => {\n    element.nextUnitOfWork.currentHookIndex = -1;\n    element.nextUnitOfWork.currentMemoIndex = -1;\n    element.nextUnitOfWork.currentReferenceIndex = -1;\n  });\n};\n\nconst getVirtualDomReference = initialValue => {\n  const currentElement = selectWipByComponentName(\n    elements,\n    wipRoot.componentName\n  );\n  // initialzePropertyIfNotPresent(\"currentReferenceIndex\",currentElement.nextUnitOfWork);\n  // currentElement.nextUnitOfWork.currentReferenceIndex++;\n  currentElement.nextUnitOfWork.ref = {\n    current: initialValue || currentElement.ref\n  };\n\n  return currentElement.nextUnitOfWork.ref;\n};\n\nconst setNextUnitOfWorkFromCurrentWip = currentRoot => {\n  nextUnitOfWork = {\n    dom: currentRoot.dom,\n    props: currentRoot.props,\n    alternate: currentRoot,\n    isFunctionalComponent: true,\n    hook: currentRoot.hook,\n    hooks: currentRoot.hooks,\n    componentName: currentRoot.componentName\n  };\n  wipRoot = nextUnitOfWork;\n  resetcurrentHookIndex();\n};\n\nexport {\n  startWorkLoop,\n  setNextUnitOfWorkFromCurrentWip,\n  getHookForCurrentItem,\n  getMemoValue,\n  getVirtualDomReference\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const _createTextElement = text => {\n  return {\n    type: \"TEXT_ELEMENT\",\n    props: {\n      nodeValue: text,\n      children: []\n    }\n  };\n};\n\nconst createElement = (type, props, ...children) => {\n  return {\n    type,\n    props: {\n      ...props,\n      children: children.map(child =>\n        typeof child === \"object\" ? child : _createTextElement(child)\n      )\n    }\n  };\n};\n\n\nexport default createElement;","import {\n  getHookForCurrentItem,\n  getMemoValue,\n  getVirtualDomReference\n} from \"./workLoop\";\n\nconst useState = intialValue => {\n  const hook = getHookForCurrentItem(intialValue);\n  return [hook.state, hook.callback];\n};\n\nconst useMemo = (action, params) => {\n  const memoValue = getMemoValue(action, params);\n  return memoValue;\n};\n\nconst useRef = initialValue => {\n  const ref = getVirtualDomReference(initialValue);\n  return ref;\n};\n\nexport { useState, useMemo, useRef };\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import { startWorkLoop } from \"./workLoop\";\n\nconst render = (element, container) => {\n  const wipRoot = {\n    isFunctionalComponent: element instanceof Function,\n    dom: container,\n    props: {\n      children: [element]\n    },\n    alternate: null,\n    hooks: null,\n    componentName: element.name\n  };\n\n  wipRoot.alternate = wipRoot;\n  startWorkLoop(wipRoot);\n};\n\nexport default render;\n","import {render} from \"./Dynamo/src\";\nimport { CounterExample } from \"./components/counter-example\";\nimport { ClockExample } from \"./components/clock-example\";\n\nconst counterContainer = document.getElementById(\"counter-example\");\nrender(CounterExample, counterContainer);\n\n// const clockContainer = document.getElementById(\"clock-example\");\n// render(ClockExample, clockContainer);\n","import * as Dynamo from \"../Dynamo/src\"\n\n/** @jsx Dynamo.createElement */\nexport const CounterExample = () => {\n  const [counter, setCounter] = Dynamo.useState(0);\n  var style = {\n    background: \"pink\",\n    border: \"1px solid yellow\",\n    padding: \"10px 10px\"\n  };\n\n  const textBoxStyle = {\n    border: \"1px solid gray\",\n    \"border-radius\": \"5px 5px\",\n    padding: \"5px 5px\",\n    color: \"red\"\n  };\n  const textbox = Dynamo.useRef(null);\n\n  const handleClick = e => {\n    setCounter(c => c + 1);\n  };\n\n  const alertTextBoxValue = _ => {\n    console.log(textbox.current.value, \"value\");\n    return false;\n  };\n\n  return (\n    <div>\n      <h1>Application 1</h1>\n      <h1 style={style}>Simple Counter Example:</h1>\n      <p>\n        This is a simple example. Using hooks!\n        <span>This is a test</span>\n      </p>\n      <input ref={textbox} style={textBoxStyle} type=\"text\" value={counter} />\n      <button onClick={handleClick}>Counter</button>\n      <button onClick={alertTextBoxValue}>An example of useRef</button>\n    </div>\n  );\n};\n"],"sourceRoot":""}